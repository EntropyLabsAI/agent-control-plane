openapi: 3.0.1
info:
  title: Sentinel API
  version: 1.0.0

paths:
  /api/openapi.yaml:
    get:
      summary: Get the OpenAPI schema
      operationId: GetOpenAPI
      responses:
        "200":
          description: OpenAPI schema
      tags:
        - API

  /api/projects:
    post:
      summary: Create a new project
      operationId: CreateProject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectCreate"
      responses:
        "200":
          description: Project created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
      tags:
        - Projects
    get:
      summary: List all projects
      operationId: GetProjects
      responses:
        "200":
          description: List of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
      tags:
        - Projects

  /api/projects/{projectId}/runs:
    get:
      summary: Get runs for a project
      operationId: GetProjectRuns
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of runs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Run"
        "404":
          description: Project not found
      tags:
        - Runs
    post:
      summary: Create a new run for a project
      operationId: CreateRun
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Run created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Run"
      tags:
        - Runs

  /api/reviews:
    post:
      summary: Create a supervisor request
      operationId: CreateSupervisionRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SupervisionRequest"
      responses:
        "200":
          description: Supervisor created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupervisionStatus"
      tags:
        - Reviews
    get:
      summary: List all supervisor requests
      operationId: GetSupervisionRequests
      parameters:
        - name: type
          in: query
          schema:
            $ref: "#/components/schemas/SupervisorType"
      responses:
        "200":
          description: List of supervisor requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SupervisionRequest"
      tags:
        - Reviews

  /api/reviews/{reviewId}/status:
    get:
      summary: Get supervision status
      operationId: GetSupervisionStatus
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Supervision status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupervisionStatus"
        "404":
          description: Supervision request not found
      tags:
        - Reviews

  /api/runs/{runId}/tools:
    get:
      summary: Get tools for a run
      operationId: GetRunTools
      parameters:
        - name: runId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - Runs
        - Tools
      responses:
        "200":
          description: List of tools
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tool"
        "404":
          description: Run not found

  /api/runs/{runId}/tools/{toolId}/supervisors:
    get:
      summary: Get the supervisors assigned to a tool
      operationId: GetRunToolSupervisors
      parameters:
        - name: runId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: toolId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of tools
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Supervisor"
        "404":
          description: Run or tool not found
      tags:
        - Tools
        - Supervisors
    post:
      summary: Assign a list of supervisors to a tool for a given run
      description: Specify an array of supervisors in supervision order. The first supervisor will be called first, and so on. These supervisors will be called in order when this tool is invoked for the remainder of the run.
      operationId: CreateRunToolSupervisors
      parameters:
        - name: toolId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: runId
          in: path
          required: false
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        "200":
          description: Supervisors assigned to tool successfully
      tags:
        - Tools
        - Supervisors

  /api/executions/{executionId}/supervisions:
    get:
      summary: Get supervision info for an execution
      operationId: GetExecutionSupervisions
      parameters:
        - name: executionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Supervision info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionSupervisions"
      tags:
        - Executions

  /api/runs/{runId}/executions:
    get:
      summary: Get executions for a run
      operationId: GetRunExecutions
      parameters:
        - name: runId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of executions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Execution"
      tags:
        - Runs
        - Executions
    post:
      summary: Create an execution
      operationId: CreateExecution
      parameters:
        - name: runId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                toolId:
                  type: string
                  format: uuid
      responses:
        "200":
          description: Execution created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
      tags:
        - Runs
        - Executions

  /api/tools/{toolId}:
    get:
      summary: Get tool by ID
      operationId: GetTool
      parameters:
        - name: toolId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Tool details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tool"
        "404":
          description: Tool not found
      tags:
        - Tools
  /api/tools:
    get:
      summary: List all tools
      operationId: GetTools
      responses:
        "200":
          description: List of tools
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tool"
      tags:
        - Tools
    post:
      summary: Create a new tool
      operationId: CreateTool
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tool"
      responses:
        "200":
          description: Tool created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tool"
      tags:
        - Tools

  /api/projects/{projectId}:
    get:
      summary: Get project by ID
      operationId: GetProject
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Project details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "404":
          description: Project not found
      tags:
        - Projects

  /api/runs/{runId}:
    get:
      summary: Get run by ID
      operationId: GetRun
      parameters:
        - name: runId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Run details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Run"
        "404":
          description: Run not found
      tags:
        - Runs

  /api/supervisors:
    get:
      summary: List all supervisors
      operationId: GetSupervisors
      responses:
        "200":
          description: List of supervisors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Supervisor"
      tags:
        - Supervisors
    post:
      summary: Create a new supervisor
      operationId: CreateSupervisor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Supervisor"
      responses:
        "200":
          description: Supervisor created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Supervisor"
      tags:
        - Supervisors

  /api/supervisors/{supervisorId}:
    get:
      summary: Get supervisor by ID
      operationId: GetSupervisor
      parameters:
        - name: supervisorId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Supervisor details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Supervisor"
        "404":
          description: Supervisor not found
      tags:
        - Supervisors

  /api/reviews/{reviewId}:
    get:
      summary: Get supervision request by ID
      operationId: GetSupervisionRequest
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Supervision request details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupervisionRequest"
        "404":
          description: Supervision request not found
      tags:
        - Reviews

  /api/reviews/{reviewId}/results:
    get:
      summary: Get supervision results
      operationId: GetSupervisionResults
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Supervision results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SupervisionResult"
        "404":
          description: Supervision request not found
      tags:
        - Reviews
    post:
      summary: Create a supervision result
      operationId: CreateSupervisionResult
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSupervisionResult"
      responses:
        "200":
          description: Supervision result created successfully
      tags:
        - Reviews

  /api/reviews/{reviewId}/toolrequests:
    get:
      summary: Get tool requests for a supervisor
      operationId: GetReviewToolRequests
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Tool requests for the supervisor
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ToolRequest"
        "404":
          description: Supervision request not found
      tags:
        - Reviews
        - Tools

  /api/stats:
    get:
      summary: Get hub stats
      operationId: GetHubStats
      responses:
        "200":
          description: Hub stats
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HubStats"
      tags:
        - Hub

    /api/llm/explanation:
      post:
        summary: Get LLM explanation
        operationId: GetLLMExplanation
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LLMExplanationRequest"
        responses:
          "200":
            description: LLM explanation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/LLMExplanationResponse"
      tags:
        - LLM

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id

    Project:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        created_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - created_at

    ProjectCreate:
      type: object
      properties:
        name:
          type: string
      required:
        - name

    Run:
      type: object
      properties:
        id:
          type: string
          format: uuid
        project_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
      required:
        - id
        - project_id
        - created_at

    Supervisor:
      type: object
      properties:
        id:
          type: string
          format: uuid
        description:
          type: string
        created_at:
          type: string
          format: date-time
        type:
          $ref: "#/components/schemas/SupervisorType"
        code:
          type: string
      required:
        - type
        - description
        - created_at

    SupervisorAssignment:
      type: object
      properties:
        supervisor_id:
          type: string
          format: uuid
      required:
        - supervisor_id

    Tool:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        attributes:
          type: object
          additionalProperties: true
        created_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - description

    SupervisionRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        run_id:
          type: string
          format: uuid
        execution_id:
          type: string
          format: uuid
        supervisor_id:
          type: string
          format: uuid
        task_state:
          $ref: "#/components/schemas/TaskState"
        tool_requests:
          type: array
          items:
            $ref: "#/components/schemas/ToolRequest"
        messages:
          type: array
          items:
            $ref: "#/components/schemas/LLMMessage"
        status:
          $ref: "#/components/schemas/SupervisionStatus"
      required:
        - run_id
        - execution_id
        - task_state
        - tool_requests
        - messages

    SupervisionStatus:
      type: object
      properties:
        id:
          type: integer
        supervision_request_id:
          type: string
          format: uuid
        status:
          $ref: "#/components/schemas/Status"
        created_at:
          type: string
          format: date-time
      required:
        - id
        - status
        - created_at

    SupervisionResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
        supervision_request_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        decision:
          $ref: "#/components/schemas/Decision"
        toolrequest:
          $ref: "#/components/schemas/ToolRequest"
        reasoning:
          type: string
      required:
        - id
        - supervision_request_id
        - created_at
        - decision
        - reasoning

    LLMMessage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        role:
          type: string
          enum: [system, user, assistant]
        content:
          type: string
      required:
        - role
        - content

    ToolRequest:
      type: object
      description: A tool request is a request to use a tool. It must be approved by a supervisor.
      properties:
        id:
          type: string
          format: uuid
        tool_id:
          type: string
          format: uuid
        supervision_request_id:
          type: string
          format: uuid
        message_id:
          type: string
          format: uuid
        arguments:
          type: object
          additionalProperties: true
      required:
        - tool_id
        - arguments

    ToolCreate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        attributes:
          type: object
          additionalProperties: true
      required:
        - name
        - description

    SupervisorType:
      type: string
      enum: [code, llm, human, all]

    HubStats:
      type: object
      properties:
        connected_clients:
          type: integer
        free_clients:
          type: integer
        busy_clients:
          type: integer
        assigned_reviews:
          type: object
          additionalProperties:
            type: integer
        review_distribution:
          type: object
          additionalProperties:
            type: integer
        completed_reviews_count:
          type: integer
        pending_reviews_count:
          type: integer
        assigned_reviews_count:
          type: integer
      required:
        - connected_clients
        - queued_reviews
        - stored_reviews
        - free_clients
        - busy_clients
        - assigned_reviews
        - review_distribution
        - completed_reviews_count
        - pending_reviews_count
        - assigned_reviews_count

    LLMExplanationRequest:
      type: object
      properties:
        text:
          type: string
      required:
        - text

    LLMExplanationResponse:
      type: object
      properties:
        explanation:
          type: string

    CreateSupervisionResult:
      type: object
      properties:
        execution_id:
          type: string
          format: uuid
        run_id:
          type: string
          format: uuid
        tool_id:
          type: string
          format: uuid
        supervisor_id:
          type: string
          format: uuid
        supervision_result:
          $ref: "#/components/schemas/SupervisionResult"
        tool_request:
          $ref: "#/components/schemas/ToolRequest"
      required:
        - run_id
        - execution_id
        - tool_id
        - supervisor_id
        - supervision_result
        - tool_request

    Execution:
      type: object
      properties:
        id:
          type: string
          format: uuid
        run_id:
          type: string
          format: uuid
        tool_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        status:
          $ref: "#/components/schemas/Status"
      required:
        - id

    Status:
      type: string
      enum: [pending, completed, failed, assigned, timeout]

    Decision:
      type: string
      enum: [approve, reject, terminate, modify, escalate]

    TaskState:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
        tools:
          type: array
          items:
            $ref: "#/components/schemas/Tool"
        tool_choice:
          $ref: "#/components/schemas/ToolChoice"
        store:
          type: object
          additionalProperties: true
        output:
          $ref: "#/components/schemas/Output"
        completed:
          type: boolean
        metadata:
          type: object
          additionalProperties: true
      required:
        - messages
        - tools
        - output
        - completed

    Message:
      type: object
      properties:
        content:
          type: string
        role:
          type: string
        source:
          type: string
        tool_calls:
          type: array
          items:
            $ref: "#/components/schemas/ToolCall"
        tool_call_id:
          type: string
        function:
          type: string
      required:
        - content
        - role

    ToolChoice:
      type: object
      properties:
        id:
          type: string
        function:
          type: string
        arguments:
          $ref: "#/components/schemas/Arguments"
        type:
          type: string
      required:
        - id
        - function
        - arguments
        - type

    Arguments:
      type: object
      properties:
        cmd:
          type: string
        code:
          type: string

    Output:
      type: object
      properties:
        model:
          type: string
        choices:
          type: array
          items:
            $ref: "#/components/schemas/Choice"
        usage:
          $ref: "#/components/schemas/Usage"

    Choice:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/AssistantMessage"
        stop_reason:
          type: string
      required:
        - message

    AssistantMessage:
      type: object
      properties:
        content:
          type: string
        source:
          type: string
        role:
          type: string
        tool_calls:
          type: array
          items:
            $ref: "#/components/schemas/ToolCall"
      required:
        - content
        - role

    ToolCall:
      type: object
      properties:
        id:
          type: string
        function:
          type: string
        arguments:
          type: object
          additionalProperties: true
        type:
          type: string
        parse_error:
          type: string
      required:
        - id
        - function
        - arguments
        - type

    Usage:
      type: object
      properties:
        input_tokens:
          type: integer
        output_tokens:
          type: integer
        total_tokens:
          type: integer
      required:
        - input_tokens
        - output_tokens
        - total_tokens

    ExecutionSupervisions:
      type: object
      properties:
        execution_id:
          type: string
          format: uuid
        requests:
          type: array
          items:
            $ref: "#/components/schemas/SupervisionRequest"
        results:
          type: array
          items:
            $ref: "#/components/schemas/SupervisionResult"
        statuses:
          type: array
          items:
            $ref: "#/components/schemas/SupervisionStatus"
      required:
        - execution_id
        - requests
        - results
        - statuses
